@model tester1.Models.KhuyenMai

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<!-- Tệp CSS của Bootstrap Datepicker -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css" rel="stylesheet" />

<!-- Tệp JavaScript của Bootstrap Datepicker -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>
<!-- Tệp CSS của Timepicker -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/jquery-timepicker/1.3.5/jquery.timepicker.min.css" rel="stylesheet" />

<!-- Tệp JavaScript của Timepicker -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-timepicker/1.3.5/jquery.timepicker.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/numeral.js/2.0.6/numeral.min.js"></script>


<h2>Tạo khuyến mãi</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            
            <div class="col-md-10">
                <strong>Tên khuyến mãi</strong>
                @Html.EditorFor(model => model.NameKm, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NameKm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            
            <div class="col-md-10">
                <strong>Ngày bắt đầu</strong>
                @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control", id = "StartTime" } })
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            
            <div class="col-md-10">
                <strong>Ngày kết thúc</strong>
                @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control", id = "EndTime" } })
                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
           
            <div class="col-md-10">
                <strong>Giá trị khuyến mãi</strong>
                @Html.EditorFor(model => model.PromoSale, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PromoSale, "", new { @class = "text-danger" })
            </div>
        </div> 
        <div class="form-group">
           
            <div class="col-md-10">
                <strong>Số lượng</strong>
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
    <div class="form-group">
        
        <div class="col-md-10">
            <strong>Trạng thái</strong>
            @Html.DropDownList("Status", new List<SelectListItem>
            {
                new SelectListItem { Text = "On", Value = "on" },
                new SelectListItem { Text = "Off", Value = "off" },
                new SelectListItem { Text = "Wait", Value = "wait" }
            }, new { @class = "form-control" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Tạo" class="btn btn-default" />
        </div>
    </div>
}

<strong>
    @Html.ActionLink("Trở về", "KhuyenMai")
</strong>
<script>
    // Kích hoạt Datepicker cho trường nhập ngày bắt đầu
    $('#StartTime').datepicker({
        format: 'yyyy-mm-dd', // Định dạng ngày (thay đổi tùy theo yêu cầu của bạn)
        autoclose: true,
        startDate: new Date() // Chỉ cho phép chọn ngày từ hôm nay trở đi
    });

    // Kích hoạt Datepicker cho trường nhập ngày kết thúc
    $('#EndTime').datepicker({
        format: 'yyyy-mm-dd', // Định dạng ngày (thay đổi tùy theo yêu cầu của bạn)
        autoclose: true,
        startDate: new Date() // Chỉ cho phép chọn ngày từ hôm nay trở đi
    });

    // Kiểm tra ngày khi người dùng chọn
    $('#StartTime, #EndTime').on('changeDate', function () {
        var startDate = new Date($('#StartTime').val());
        var endDate = new Date($('#EndTime').val());

        if (startDate > endDate) {
            alert('Ngày bắt đầu không thể lớn hơn ngày kết thúc.');
            $('#StartTime').val(''); // Xóa giá trị ngày bắt đầu
            $('#EndTime').val(''); // Xóa giá trị ngày kết thúc
        }
    });
</script>
<script>
    $(function () {
        $('#btnUpload').click(function () {
            $('#fileUpload').trigger('click');
        });

        $('#fileUpload').change(function () {
            if (window.FormData !== undefined) {
                var fileUpload = $('#fileUpload').get(0);
                var files = fileUpload.files;
                var formData = new FormData();
                formData.append('file', files[0]);

                $.ajax({
                    type: 'POST',
                    url: '/ListSP/ProcessUpload',
                    contentType: false,
                    processData: false,
                    data: formData,
                    success: function (urlImage) {
                        $('#pictureUpload').attr('src', urlImage);
                        $('#Hinh').val(urlImage);
                    },
                    error: function (err) {
                        alert('Error ' + err.statusText);
                    }
                });
            }
        });
    });
</script>


