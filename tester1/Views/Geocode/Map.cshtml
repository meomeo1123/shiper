﻿﻿@model tester1.Models.GeocodeResult

@{
    ViewBag.Title = "Map";
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Map with Directions</title>
    <style>
        /* Thiết lập kích thước của bản đồ */
        #map {
            height: 800px;
            width: 100%;
        }
    </style>
</head>
<body>
    <h2>Map with Directions</h2>
    <!-- Tạo một thẻ div để chứa bản đồ -->
    <div id="map"></div>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBXERVKQsDCFy-fojkLIpkLdWvN76AcSjg&callback=initMap&v=weekly&libraries=marker"
            defer></script>
    <script>
        var map;
        var directionsService;
        var directionsRenderer;
        var marker;
        var intervalId; // ID của interval để cập nhật vị trí
        var destinationLatLng;
        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 12
            });

            directionsService = new google.maps.DirectionsService();
            directionsRenderer = new google.maps.DirectionsRenderer();
            directionsRenderer.setMap(map);

            // Lấy vị trí hiện tại của người dùng
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var userLocation = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };

                    var origin = new google.maps.LatLng(userLocation.lat, userLocation.lng);
                    updateMarker(origin); // Cập nhật đánh dấu vị trí hiện tại

                    map.setCenter(userLocation);

                    var destinationAddress = '@ViewBag.Address';
                    var geocoder = new google.maps.Geocoder();
                    geocoder.geocode({ 'address': destinationAddress }, function (results, status) {
                        if (status === 'OK') {
                            var destination = results[0].geometry.location;
                            destinationLatLng = destination; // Gán giá trị cho biến destinationLatLng
                            calculateAndDisplayRoute(origin, destination);
                        } else {
                            console.log('Geocode for destination failed due to: ' + status);
                        }
                    });

                    // Cập nhật vị trí theo thời gian thực
                    intervalId = setInterval(function () {
                        navigator.geolocation.getCurrentPosition(function (position) {
                            var userLocation = {
                                lat: position.coords.latitude,
                                lng: position.coords.longitude
                            };

                            var newOrigin = new google.maps.LatLng(userLocation.lat, userLocation.lng);
                            updateMarker(newOrigin); // Cập nhật đánh dấu vị trí hiện tại

                            // Vẽ đường mới từ vị trí hiện tại đến điểm đích
                            calculateAndDisplayRoute(newOrigin, destinationLatLng);
                        });
                    }, 5000); // Cập nhật sau mỗi 5 giây


                }, function () {
                    handleLocationError(true, infoWindow, map.getCenter());
                });
            } else {
                handleLocationError(false, infoWindow, map.getCenter());
            }
        }

        function handleLocationError(browserHasGeolocation, pos) {
            console.log('Error: The Geolocation service failed.');
        }

        function updateMarker(position) {
            if (marker) {
                marker.setPosition(position);
            } else {
                marker = new google.maps.Marker({
                    position: position,
                    map: map,
                    title: 'Your Location'
                });
            }
        }

        // tính toán đường đi
        function calculateAndDisplayRoute(origin, destination) {
            var request = {
                origin: origin,
                destination: destination,
                travelMode: 'DRIVING'
            };

            directionsService.route(request, function (response, status) {
                if (status === 'OK') {
                    directionsRenderer.setDirections(response);
                } else {
                    window.alert('Directions request failed due to ' + status);
                }
            });
        }
    </script>



    <!-- Bao gồm Google Maps JavaScript API -->
</body>
</html>